apiVersion: v1
kind: ServiceAccount
metadata:
  name: crd-controller
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: kamus-crd
rules:
- apiGroups: ["soluto.com"] # "" indicates the core API group
  resources: ["kamussecrets"]
  verbs: ["watch"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  verbs: ["create", "delete", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: crd-controller
subjects:
- kind: ServiceAccount
  name: crd-controller
  namespace: default
roleRef:
  kind: ClusterRole
  name: kamus-crd
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: kamus-controller 
  labels:
    app: kamus
    component: crd-controller
    chart: kamus-0.3.0
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 8888
      protocol: TCP
      name: http-kamus-controller
  selector:
    app: kamus
    component: crd-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kamus-crd-controller
  labels:
    app: kamus
    component: crd-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kamus
      component: crd-controller
  template:
    metadata:
      labels:
        app: kamus
        component: crd-controller
    spec:
      serviceAccountName: crd-controller
      containers:
      - name: controller
        image: crd-controller
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9999        
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9999